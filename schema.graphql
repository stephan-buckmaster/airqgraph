schema {
    query: Query
    mutation: Mutation
}

type AirvisualConcentration {
    conc: Float
    aqius: Float
    aqicn: Float
}

input AirvisualConcentrationInput {
    conc: Float
    aqius: Float
    aqicn: Float
}
type AirvisualDeviceMeasurement {
    id: ID!
    co2: Float
    pm25: AirvisualConcentration!
    pm10:  AirvisualConcentration!
    pm1:  AirvisualConcentration!
    pr: Float
    hm: Float
    tp: Float
    aqius: Float
    aqicn: Float
    mainus: String
    maincn: String
    ts: String
    created_at: String!
}

input AirvisualDeviceMeasurementInput {
    pm25: AirvisualConcentrationInput
    pm10:  AirvisualConcentrationInput
    pm1:  AirvisualConcentrationInput
    co2: Float
    pr: Float
    hm: Float
    tp: Float
    aqius: Float
    aqicn: Float
    mainus: String
    maincn: String
    ts: String
}

type AirvisualDeviceMeasurementResult {
    success: Boolean!
    errors: [String]
    airvisual_device_measurement: AirvisualDeviceMeasurement
}

type AirvisualDeviceMeasurementsResult {
    success: Boolean!
    errors: [String]
    airvisual_device_measurements: [AirvisualDeviceMeasurement]
}

type Query {
    listAirvisualDeviceMeasurements: AirvisualDeviceMeasurementsResult!
    getLatestAirvisualDeviceMeasurement: AirvisualDeviceMeasurementResult!
    getAirvisualDeviceMeasurement(id: ID!): AirvisualDeviceMeasurementResult!
}

type Mutation {
    createAirvisualDeviceMeasurement(input: AirvisualDeviceMeasurementInput): AirvisualDeviceMeasurementResult!
}
